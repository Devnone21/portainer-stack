version: '3.8'

networks:
  monitoring:
    name: monitoring
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data:
  loki:

services:
  # Since the Loki containers are running as user 10001 and the mounted data volume is owned by root,
  # Loki would not have permissions to create the directories.
  # Therefore the init container changes permissions of the mounted directory.
  init:
    image: &lokiImage grafana/loki:2.9.2
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/loki"
    volumes:
      - ./loki:/loki
    networks:
      - monitoring

  nginx-proxy-manager:
    image: jc21/nginx-proxy-manager:2.10.1
    container_name: nginx-manager
    restart: unless-stopped
    volumes:
      - ./nginx_data:/data
      - ./letsencrypt:/etc/letsencrypt
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    ports:
      - 80:80
      - 81:81
      - 443:443
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:9.1.6
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    volumes:
      - ./config/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    networks:
      - monitoring

  promtail:
    image:  grafana/promtail:2.9.2
    container_name: promtail
    restart: unless-stopped
    ports:
      - 9080
    volumes:
      - ./loki/:/var/log/
      - ./config:/etc/promtail/
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/promtail.yaml
    depends_on:
      - loki
    networks:
      - monitoring
      
  prometheus:
    image: prom/prometheus:v2.27.0
    container_name: prometheus-v2
    restart: unless-stopped
    ports:
      - 9090
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      [
        '--log.level=debug',
        '--config.file=/etc/prometheus/prometheus.yml',
        '--enable-feature=remote-write-receiver',
        '--query.lookback-delta=30s'
      ]
    networks:
      - monitoring
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - monitoring

  loki-read:
    image: *lokiImage
    restart: always
    volumes:
      - ./config:/etc/loki/
      - ./rules:/loki/rules:ro
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=read"
    networks:
      - monitoring

  loki-write:
    image: *lokiImage
    restart: always
    volumes:
      - ./config:/etc/loki/
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=write"
    networks:
      - monitoring

  loki-backend:
    image: *lokiImage
    restart: always
    volumes:
      - ./config:/etc/loki/
    ports:
      - "3100"
      - "7946"
    command: "-config.file=/etc/loki/loki.yaml -target=backend -legacy-read-mode=false"
    networks:
      - monitoring
